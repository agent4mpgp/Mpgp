version: "3"

services:
    mpgpdb:
        environment:
            - POSTGRES_DB=mpgp
            - POSTGRES_USER=agent4mpgp
            - POSTGRES_PASSWORD=v3ry23C93tp422w0Rd
        image: mpgp129/mpgpdb
        hostname: mpgpdb
        expose:
            - 5432
        ports:
            - 5432:5432
        container_name: mpgpdb
        labels:
            - SERVICE_NAME=mpgpdb
        volumes:
            - postgres:/var/lib/postgresql/data

    mpgpweb:
        links:
            - mpgpdb
        depends_on:
            - mpgpdb
        image: mpgp129/mpgpweb
        hostname: mpgpweb
        expose:
            - 5000
        ports:
            - 5000:5000
        container_name: mpgpweb
        environment:
            - DB_HOST=mpgpdb
            - DB_USER_NAME=agent4mpgp
            - DB_USER_PASSWORD=v3ry23C93tp422w0Rd
            - DB_NAME=mpgp
            - REST_API_URL=http://0.0.0.0:5000
            - APP_ENV=prod
            - VIRTUAL_HOST=mpgpweb
        labels:
            - SERVICE_NAME=mpgpweb
        command: >
            /bin/sh -c "
            apt-get install -y wget
            && wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
            && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
            && rm dockerize-linux-amd64-v0.6.1.tar.gz
            && dockerize -wait tcp://mpgpdb:5432 -timeout 1m
            && envsubst < appsettings.json > temp.json && mv -f temp.json appsettings.json
            && dotnet Mpgp.RestApiServer.dll"

    elastickibana:
        image: nshou/elasticsearch-kibana
        hostname: elastickibana
        expose:
            - 9200
            - 5601
        ports:
            - 9200:9200
            - 5601:5601
        container_name: elastickibana
        labels:
            - SERVICE_NAME=elastickibana

volumes:
    postgres:

# sed -i "s|%$ENV_KEY1%|$ENV_VALUE1|g;s|%$ENV_KEY2%|$ENV_VALUE2|g" appsettings.json